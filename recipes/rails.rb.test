require 'yaml'
$settings = YAML.load_file(File.join(File.dirname(__FILE__), "..", "/settings.yml"))

# Build Essential
package :build_essential, :provides => :init do
  description 'Build tools and libraries, such like build-essential, git and more.'
  apt 'build-essential zlib1g zlib1g-dev libssl-dev libreadline5-dev libcurl4-openssl-dev' do
    pre  :install, "apt-get -y update"
  end
end
# Ruby
package :ruby do
  description "Ruby 1.9.2-p290"
  version = '1.9.2-p290'
  apt %w(bison openssl libreadline6 libreadline6-dev curl libssl-dev libyaml-dev 
         libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev autoconf)
         
  source "http://ftp.ruby-lang.org/pub/ruby/1.9/ruby-#{version}.tar.gz" do
    post :install, "gem update --system"
    post :install, "gem install bundler"
  end

  verify { 
    has_executable 'ruby'
    has_executable 'gem'
    has_gem "bundler"
  }
end

# Nginx + Passenger
package :nginx do
  description "Nginx Web Server installed by Passenger"
  version = '1.0.11'
  
  noop do
    pre :install, "sudo passenger-install-nginx-module --auto --auto-download --prefix=#{$settings['install']['prefix']}/nginx"

    post :install, "wget https://raw.github.com/raecoo/rails-stack/master/assets/nginx.init.d -P /etc/init.d/nginx"
    post :install, "sudo chmod +x /etc/init.d/nginx"
    post :install, "sudo /usr/sbin/update-rc.d -f nginx defaults"
    post :install, "sudo /etc/init.d/nginx start; true"
    post :install, "sudo /etc/init.d/nginx reload"
  end
  
  requires :passenger
  verify {
    has_file "/etc/init.d/nginx"
  }
   
end

package :passenger, :provides => :app_server do
  description 'Phusion Passenger (mod_rails)'
  version = '3.0.11'
  gem 'passenger'
  
  requires :ruby
  verify {
    has_gem "passenger", version
  }
end

# MySQL
package :mysql, :provides => :database do
  description "MySQL Database"
  
  apt %w( mysql-server mysql-client libmysqlclient-dev ) do
    USER_NAME     = $settings['database']['user']
    USER_PASSWORD = $settings['database']['password']
    ROOT_PASSWORD = $settings['database']['root_password']
    post :install, "service mysql stop; true"
    post :install, "service mysql start"
    post :install, "mysqladmin -u root password #{ROOT_PASSWORD}"
    post :install, "echo 'GRANT ALL PRIVILEGES ON #{USER_NAME}.* TO #{USER_NAME}@'%' IDENTIFIED BY \"#{USER_PASSWORD}\";'"
  end
  
  verify {
    has_executable 'mysql'
  }
end
# Redis

# MongoDB